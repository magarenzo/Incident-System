PostgreSQL automatically creates indexes on primary keys and unique constraints, but not on the referencing side of foreign key relationships.

1. primary keys

incident (incident_id) *done on table creation*
incident_type (incident_type_id) *done on table creation*
comment (comment_id) *done on table creation*
comment_text (comment_text_id) *done on table creation*
ip_address (address_id, incident_id) *done on table creation*
persons (person_id) *done on table creation*
incident_persons (incident_id, person_id) *done on table creation*

2. destination of foreign keys (unless they are already a primary key)

FOREIGN KEY (incident_id) REFERENCES incident (incident_id) *already a primary key*
FOREIGN KEY (incident_id) REFERENCES incident (incident_id) *already a primary key*
FOREIGN KEY (incident_id) REFERENCES comment (incident_id) *ran the following command: CREATE INDEX unique_constraint ON comment (incident_id);*
FOREIGN KEY (incident_id) REFERENCES incident (incident_id) *already a primary key*
FOREIGN KEY (person_id) REFERENCES persons (person_id) *already a primary key*
FOREIGN KEY (incident_id) REFERENCES incident (incident_id) *already a primary key*

3. all fields regularly used to query data

CREATE INDEX unique_constraint_2 ON incident (date_created);
CREATE INDEX unique_constraint_3 ON incident (incident_state);
CREATE INDEX unique_constraint_4 ON incident_type (type_body);
CREATE INDEX unique_constraint_5 ON comment (handler_name);